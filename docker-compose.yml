version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ${NODE_ENV}_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ${NETWORK_NAME:-template_net}

  strapi:
    container_name: ${NODE_ENV}_strapi
    build:
      context: .
      dockerfile: docker/${NODE_ENV}/strapi/Dockerfile
    depends_on:
      - postgres
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_SSL: ${DATABASE_SSL:-false}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      STRAPI_TELEMETRY_DISABLED: "true"
      HOST: 0.0.0.0
      PORT: 1337
      NODE_ENV: ${NODE_ENV}
    ports:
      - 1337:1337
    volumes:
      - ./strapi:/app
      - /app/node_modules
      - ./strapi/public/uploads:/app/public/uploads
    networks:
      - ${NETWORK_NAME:-template_net}

  nextjs:
    container_name: ${NODE_ENV}_nextjs
    build:
      context: .
      dockerfile: docker/${NODE_ENV}/nextjs/Dockerfile
    depends_on:
      - strapi
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://strapi:1337}
      NODE_ENV: ${NODE_ENV}
      NEXT_TELEMETRY_DISABLED: '1'
    volumes:
      - ./nextjs:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3000:3000
    networks:
      - ${NETWORK_NAME:-app_net}

  # nginx:
  #   image: nginx:stable-alpine
  #   container_name: ${NODE_ENV}_nginx
  #   depends_on:
  #     - nextjs
  #     - strapi
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./docker/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  #   networks:
  #     - ${NETWORK_NAME:-app_net}

volumes:
  postgres_data:

networks:
  ${NETWORK_NAME:-app_net}:
    driver: bridge
